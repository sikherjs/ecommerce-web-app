{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCgGwd8vDxBGsVzrdvdzMjKHqDu0VQSipE\",\n  authDomain: \"crwn-clothing-db-e8984.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-e8984\",\n  storageBucket: \"crwn-clothing-db-e8984.appspot.com\",\n  messagingSenderId: \"311528012217\",\n  appId: \"1:311528012217:web:e8cd7db896fdcfcc391e68\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef; //if user data exists\n  //create/set the document with the data from userAuth in my collection\n  //return userDocRef\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","signInWithRedirect","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message"],"sources":["/Users/sjs0601/Desktop/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {getAuth,signInWithPopup,signInWithRedirect,GoogleAuthProvider} from 'firebase/auth';\n\n\n\nimport {\n\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc\n} from 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCgGwd8vDxBGsVzrdvdzMjKHqDu0VQSipE\",\n    authDomain: \"crwn-clothing-db-e8984.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-e8984\",\n    storageBucket: \"crwn-clothing-db-e8984.appspot.com\",\n    messagingSenderId: \"311528012217\",\n    appId: \"1:311528012217:web:e8cd7db896fdcfcc391e68\"\n  };\n  \n  // Initialize Firebase\n  const firebaseApp = initializeApp(firebaseConfig);\n\n  const googleProvider = new GoogleAuthProvider();\n  googleProvider.setCustomParameters({\n    prompt: \"select_account\"\n  });\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = ()=> signInWithPopup(auth,googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth,googleProvider); \n\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth)=>{\n  const userDocRef = doc(db,'users',userAuth.uid)\n  console.log(userDocRef);\n\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n\n  if(!userSnapshot.exists()){\n    const {displayName, email} = userAuth;\n    const createdAt = new Date();\n\n    try{\n      await setDoc(userDocRef,{\n        displayName,\n        email,\n        createdAt\n      });\n    } catch(error){\n      console.log('error creating the user',error.message)\n    }\n  }\n\n  return userDocRef;\n\n  //if user data exists\n  //create/set the document with the data from userAuth in my collection\n\n  //return userDocRef\n\n};"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAAQC,OAAR,EAAgBC,eAAhB,EAAgCC,kBAAhC,EAAmDC,kBAAnD,QAA4E,eAA5E;AAIA,SAEEC,YAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,MALF,QAMO,oBANP;AAQA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCADW;EAEnBC,UAAU,EAAE,wCAFO;EAGnBC,SAAS,EAAE,wBAHQ;EAInBC,aAAa,EAAE,oCAJI;EAKnBC,iBAAiB,EAAE,cALA;EAMnBC,KAAK,EAAE;AANY,CAAvB,C,CASE;;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIb,kBAAJ,EAAvB;AACAa,cAAc,CAACC,mBAAf,CAAmC;EACjCC,MAAM,EAAE;AADyB,CAAnC;AAIF,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAApB;AACP,OAAO,MAAMoB,qBAAqB,GAAG,MAAKnB,eAAe,CAACkB,IAAD,EAAMH,cAAN,CAAlD;AACP,OAAO,MAAMK,wBAAwB,GAAG,MAAMnB,kBAAkB,CAACiB,IAAD,EAAMH,cAAN,CAAzD;AAGP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,MAAOC,QAAP,IAAkB;EAC1D,MAAMC,UAAU,GAAGpB,GAAG,CAACiB,EAAD,EAAI,OAAJ,EAAYE,QAAQ,CAACE,GAArB,CAAtB;EACAC,OAAO,CAACC,GAAR,CAAYH,UAAZ;EAEA,MAAMI,YAAY,GAAG,MAAMvB,MAAM,CAACmB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ;;EAEA,IAAG,CAACA,YAAY,CAACC,MAAb,EAAJ,EAA0B;IACxB,MAAM;MAACC,WAAD;MAAcC;IAAd,IAAuBR,QAA7B;IACA,MAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAG;MACD,MAAM3B,MAAM,CAACkB,UAAD,EAAY;QACtBM,WADsB;QAEtBC,KAFsB;QAGtBC;MAHsB,CAAZ,CAAZ;IAKD,CAND,CAME,OAAME,KAAN,EAAY;MACZR,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCO,KAAK,CAACC,OAA5C;IACD;EACF;;EAED,OAAOX,UAAP,CAtB0D,CAwB1D;EACA;EAEA;AAED,CA7BM"},"metadata":{},"sourceType":"module"}