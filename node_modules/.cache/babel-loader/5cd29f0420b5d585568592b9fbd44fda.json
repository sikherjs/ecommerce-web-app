{"ast":null,"code":"var _jsxFileName = \"/Users/sjs0601/Desktop/crwn-clothing/src/components/button/button.component.jsx\";\n//  default, inverted, google sign in//\nimport { BaseButton, GoogleSignInButton, InvertedButton } from \"./button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\n\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton0,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\n\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, { ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","GoogleSignInButton0","Button","children","otherProps","CustomButton"],"sources":["/Users/sjs0601/Desktop/crwn-clothing/src/components/button/button.component.jsx"],"sourcesContent":["//  default, inverted, google sign in//\n\nimport { BaseButton,GoogleSignInButton,InvertedButton } from \"./button.styles\";\n\n\nexport const BUTTON_TYPE_CLASSES = {\n    base:'base',\n    google:'google-sign-in',\n    inverted: 'inverted'\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) =>(\n    {\n        [BUTTON_TYPE_CLASSES.base] :BaseButton,\n        [BUTTON_TYPE_CLASSES.google] : GoogleSignInButton0,\n        [BUTTON_TYPE_CLASSES.inverted] : InvertedButton,\n        \n    }[buttonType]\n)\n\n\nconst Button = ({children, buttonType,...otherProps})=>{\n    const CustomButton = getButton(buttonType);\n    return(\n        <CustomButton {...otherProps}>{children}</CustomButton>\n    )\n}\n\nexport default Button;"],"mappings":";AAAA;AAEA,SAASA,UAAT,EAAoBC,kBAApB,EAAuCC,cAAvC,QAA6D,iBAA7D;;AAGA,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,IAAI,EAAC,MAD0B;EAE/BC,MAAM,EAAC,gBAFwB;EAG/BC,QAAQ,EAAE;AAHqB,CAA5B;;AAMP,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAD,uEAAcL,mBAAmB,CAACC,IAAlC;EAAA,OACd;IACI,CAACD,mBAAmB,CAACC,IAArB,GAA4BJ,UADhC;IAEI,CAACG,mBAAmB,CAACE,MAArB,GAA+BI,mBAFnC;IAGI,CAACN,mBAAmB,CAACG,QAArB,GAAiCJ;EAHrC,EAKEM,UALF,CADc;AAAA,CAAlB;;AAUA,MAAME,MAAM,GAAG,QAAwC;EAAA,IAAvC;IAACC,QAAD;IAAWH,UAAX;IAAsB,GAAGI;EAAzB,CAAuC;EACnD,MAAMC,YAAY,GAAGN,SAAS,CAACC,UAAD,CAA9B;EACA,oBACI,QAAC,YAAD,OAAkBI,UAAlB;IAAA,UAA+BD;EAA/B;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CALD;;KAAMD,M;AAON,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}